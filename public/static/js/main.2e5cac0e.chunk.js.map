{"version":3,"sources":["Login.js","Logout.js","ListenerContext.js","ListenerSongCard.js","ListenerSongs.js","RatingCard.js","SongCard.js","Songs.js","Create.js","NavBar.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Login","setListener","useState","logError","setLogError","signupError","setSignupError","username","password","loginForm","setLoginForm","name","profile_pic","password_confirmation","signupForm","setSignupForm","updateLogin","e","target","value","updateSignup","id","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","resp","ok","Error","status","console","log","json","listenerLog","catch","error","children","type","onChange","style","color","newListener","Logout","onClick","ListenerContext","createContext","ListenerSongCard","song","className","title","artist","ListenerSongs","songItems","listener","useContext","songs","map","RatingCard","rating","setSongs","stars","ratingListener","listener_name","i","review","editError","setEditError","commentChange","setCommentChange","comment","listener_id","newRating","newRatings","ratings","newSongs","songItem","song_id","setTimeout","filter","item","SongCard","showForm","setShowForm","showRatings","setShowRatings","ratingAverage","reduce","sum","length","ratingIds","ratingError","setRatingError","cover","setCover","ratingForm","setRatingForm","updateRating","data","songData","results","artistName","artworkUrl100","ratingItems","src","alt","includes","Songs","Create","songForm","setSongForm","updateSong","newSong","CustomLink","to","props","resolvedPath","useResolvedPath","isActive","useMatch","path","pathname","end","NavBar","class","Home","App","useEffect","Provider","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e5cac0e.chunk.js","sourcesContent":["import {React, useState} from 'react';\n\nfunction Login({setListener}) {\n\n    const [logError,setLogError] = useState(false)\n    const [signupError, setSignupError] = useState(false)\n\n    const [loginForm, setLoginForm] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    const [signupForm, setSignupForm] = useState({\n        name: \"\",\n        profile_pic: \"\",\n        username: \"\",\n        password: \"\",\n        password_confirmation: \"\"\n    })\n\n    function createListener(e) {\n        e.preventDefault();      \n        fetch('listeners', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(signupForm),\n        })\n        .then(resp => {\n            if (resp.ok) {\n                resp.json()\n                .then((newListener) => {\n                    console.log(newListener)\n                }) \n            }\n            else {\n                setSignupError(true)\n                throw new Error(`HTTP error, status = ${resp.status}`);\n            }\n        })\n        .catch(error => {\n            console.error(error);\n        })\n        e.target.children[1].value = \"\"\n        e.target.children[3].value = \"\"\n        e.target.children[5].value = \"\"\n        e.target.children[7].value = \"\"\n    }\n\n    function updateLogin(e) {\n        const target = e.target.name\n        setLoginForm({...loginForm, [target] : e.target.value})\n        setLogError(false)\n\n    }\n\n    function updateSignup(e) {\n        const target = e.target.name\n        setSignupForm({...signupForm, [target] : e.target.value})\n        setSignupError(false)\n    }\n\n    function handleLogin(e) {\n        e.preventDefault();\n        fetch('login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(loginForm),\n        })\n        .then(resp => {\n            if (resp.ok) {\n                console.log(resp);\n                resp.json()\n                .then((listenerLog) => {\n                    console.log(listenerLog)\n                    setListener(listenerLog)\n                }) \n            }\n            else {\n                setLogError(true)\n                throw new Error(`HTTP error, status = ${resp.status}`);\n            }\n        })\n        .catch(error => {\n            console.error(error);\n        })\n        e.target.children[1].value = \"\"\n        e.target.children[3].value = \"\"\n        \n    }\n\n    return(\n        <div>\n            <h1>Login</h1>\n            <form id=\"login\" onSubmit={handleLogin}>\n                <label>Username: </label>\n                <input type=\"text\" name=\"username\" onChange={updateLogin}></input>\n                <label>   Password: </label>\n                <input type=\"text\" name=\"password\" onChange={updateLogin}></input>\n                <input type=\"submit\" value=\"Login\"></input>      \n            </form>\n            {logError ? <p style={{color: \"red\"}}>Invalid Username or Password</p> : null}\n            <h1>Sign Up!</h1>\n            <form id=\"sign up\" onSubmit={createListener}>\n                <label>Name: </label>\n                <input type=\"text\" name=\"name\" onChange={updateSignup}></input>\n                <label>Username: </label>\n                <input type=\"text\" name=\"username\" onChange={updateSignup}></input>\n                <label>Password:</label>\n                <input type=\"text\" name=\"password\" onChange={updateSignup}></input>\n                <label>Confirm Password:</label>\n                <input type=\"text\" name=\"password_confirmation\" onChange={updateSignup}></input>\n                <input type=\"submit\" value=\"Signup\"></input>\n            </form> \n            {signupError ? <p style={{color: \"red\"}}>Invalid Signup Info</p> : null}  \n        </div>\n    )\n\n}\n\nexport default Login;","\nfunction Logout({setListener}) {\n\n    function handleLogout(e) {\n        e.preventDefault();\n\n        fetch('logout', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(null), \n        })\n        .then(resp => console.log(resp))\n        .then(() => {\n            setListener(null)\n        })\n    }\n\n    return (\n        <div>\n            <h1>See you later!</h1>\n            <button onClick={handleLogout}>Logout</button>\n        </div>\n    )\n\n\n}\n\nexport default Logout;","import { createContext } from \"react\";\n\nconst ListenerContext = createContext()\n\n\nexport default ListenerContext;","\nfunction ListenerSongCard({song}) {\n    return (\n        <div className=\"song-contianer\">\n            <div className=\"song-card\">\n                <h3 className=\"left\">{song.title}</h3>\n                <h4 className=\"right\"> by {song.artist}</h4>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default ListenerSongCard\n\n","import {React, useContext} from 'react';\nimport ListenerContext from './ListenerContext';\nimport ListenerSongCard from './ListenerSongCard';\n\nfunction ListenerSongs() {\n    const listener = useContext(ListenerContext)\n    let songItems\n\n    if (listener != null) {\n        songItems = listener.songs.map(song => (\n            <ListenerSongCard key={song.title} song={song}/>\n        ))\n    }\n\n    return(\n        <div>\n            <h1>Listener Songs</h1>\n            {listener ? songItems : \"not logged on\"}        \n        </div>\n    )\n\n}\n\nexport default ListenerSongs;","import { React, useState, useContext } from \"react\"\nimport ListenerContext from \"./ListenerContext\"\n\nfunction RatingCard({rating, song, songs, setSongs}) {\n    const star = \"⭐\"\n    let stars = \"\"\n    \n    const listener = useContext(ListenerContext)\n    const ratingListener = rating.listener_name\n\n    for(let i=0; i< rating.review ; i++){\n        stars += star\n    }\n    const [editError, setEditError] = useState(false)\n    const [commentChange, setCommentChange] = useState(\"\")\n\n    function handleDelete(e) {\n        e.preventDefault()\n        if (listener != null) {\n            if (listener.id == rating.listener_id) {\n                fetch(`/songs/${song.id}/ratings/${rating.id}`, {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(null), \n                })\n                .then(resp => console.log(resp))\n                .then(() => {\n                    const newRatings = song.ratings.filter(item => item.id != rating.id)\n                    song.ratings = newRatings\n                    const newSongs = songs.map(songItem => songItem.id == rating.song_id? song : songItem)\n                    setSongs(newSongs)\n                    listener.songs = listener.songs.filter(song => song.id != rating.song_id)\n                })\n            }\n            else {\n                setEditError(true)\n                setTimeout(() => {\n                    setEditError(false);\n                }, \"1500\");\n            }\n        }\n        else {\n            setEditError(true)\n            setTimeout(() => {\n                setEditError(false);\n            }, \"1500\");\n        }\n    }\n\n    function updateComment(e) {\n        e.preventDefault()\n        setCommentChange(e.target.value)\n    }\n\n    function updateRating(e) {\n        e.preventDefault();\n        e.target.children[0].value = ''\n        if (listener != null) {\n            if (listener.id == rating.listener_id) {\n                fetch(`/songs/${song.id}/ratings/${rating.id}`, {\n                    method: 'PATCH',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({comment: commentChange}), \n                }).then(resp => resp.json())\n                .then((newRating) => {\n                    console.log(newRating)\n                    const newRatings = song.ratings.map(rating => rating.id == newRating.id? newRating : rating)\n                    song.ratings = newRatings \n                    const newSongs = songs.map(songItem => songItem.id == rating.song_id? song : songItem)\n                    setSongs(newSongs)\n                })\n            }\n            else {\n                setEditError(true)\n                setTimeout(() => {\n                    setEditError(false);\n                }, \"1500\");\n            }\n        }\n        else {\n            setEditError(true)\n            setTimeout(() => {\n                setEditError(false);\n            }, \"1500\");\n        }\n    }\n    \n    return(\n        <div id=\"rating\">\n            <h3>{ratingListener} :</h3>\n            <h5>{stars}</h5>\n            <h5>{rating.comment}</h5>\n            <form id='update_rating' onSubmit={updateRating}>\n                <input name=\"comment\" type=\"text\" onChange={updateComment}></input>\n                <input type=\"submit\" value=\"Change Comment\"></input>\n            </form>\n            <button id=\"delete\" onClick={handleDelete}>X</button>\n            <h5 style={{color: \"red\"}}>{editError ? \"Listeners can only edit their own ratings\" :null}</h5>\n        </div>\n    )\n}\n\nexport default RatingCard;","import {React, useState, useContext} from 'react';\nimport ListenerContext from './ListenerContext';\nimport RatingCard from './RatingCard';\n\nfunction SongCard({song, songs, setSongs}) {\n    \n    const listener = useContext(ListenerContext)\n    const [showForm, setShowForm] = useState(false)\n    const ratings = song.ratings\n    const [showRatings, setShowRatings] = useState(false)\n    const ratingAverage = (ratings.reduce((sum, rating) => sum = sum + rating.review, 0))/ratings.length\n    const ratingIds = ratings.map(rating => rating.listener_id)\n    const [ratingError, setRatingError] = useState(false)\n    const [cover, setCover] = useState(\"\")\n    const [ratingForm, setRatingForm] = useState({\n        review: 1,\n        comment: \"\",\n        song_id: song.id,\n        listener_id: null\n    })\n\n    fetch(`https://itunes.apple.com/search?media=music&entity=song&term=${song.title}`)\n    .then(resp => resp.json())\n    .then(data => {\n        \n        const songsMatch = data.results.filter(songItem => songItem.artistName == song.artist);\n        const songData = songsMatch[0]\n        setCover(songData.artworkUrl100)\n    })\n\n    \n    \n    function updateRating(e) {\n        const target = e.target.name\n        setRatingForm({...ratingForm, [target] : e.target.value, \"listener_id\": listener.id})\n    }\n\n    function submitRating(e) {\n        e.preventDefault()\n        setShowForm(false)\n        if (!ratingIds.includes(listener.id)) {\n            fetch(`/songs/${song.id}/ratings`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(ratingForm),\n            })\n            .then(resp => resp.json())\n            .then((newRating) => {\n                const newRatings = [...ratings, newRating]\n                song.ratings = newRatings\n                const newSongs = songs.map(songItem => songItem.id == newRating.song_id? song : songItem)\n                setSongs(newSongs)\n                listener.songs = [...listener.songs, song]\n            });\n        }\n        else {\n            setRatingError(true)\n            setTimeout(() => {\n                setRatingError(false);\n            }, \"1500\");\n        }\n    }\n\n    const ratingItems = ratings.map(rating => (\n        <RatingCard key={rating.id} rating={rating} song={song} songs={songs} setSongs={setSongs}></RatingCard>\n    ))\n    \n    return(\n        <div className='song-card'>\n            <div className='left'>\n                <h2>{song.title}</h2>\n                <h5>by {song.artist}</h5>\n                <img src={cover} alt=\"album cover\" ></img>\n            </div>\n            <div className='right'>\n                <p>Average Listener Rating: {ratingAverage > 0 ? ratingAverage: 0}</p>\n                <h5 style={{color:\"red\"}}>{ratingError ? \"You've already rated this song\": null}</h5>\n                {showForm? (\n                    <form id=\"make_rating\" onSubmit={submitRating}>\n                    <select name=\"review\" type=\"number\" onChange={updateRating}>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                    <label>Comment:</label>\n                    <input name=\"comment\" type=\"text\" onChange={updateRating}/>\n                    <input name=\"submit\" type=\"submit\"/>\n                </form>\n                ): <button onClick={() => {listener? setShowForm(true): setShowForm(false)}}>{listener ? \"Rate Me!\" : \"Log In to Rate Me!\"}</button>}\n                {showRatings ? (\n                    <div>\n                        <button onClick={() => setShowRatings(false)}>Hide Ratings</button>\n                        {ratingItems}\n                    </div>\n                    ): <button onClick={() => setShowRatings(true)}>Show Ratings</button>\n                }\n            </div>  \n        </div>\n    )\n\n}\n\nexport default SongCard;","import {React} from 'react';\nimport SongCard from './SongCard';\n\nfunction Songs({songs, setSongs}) {\n\n    const songItems = songs.map(song => {\n        return <SongCard key={song.title} song={song} songs={songs} setSongs={setSongs} />\n    })\n\n    \n    return(\n        <div className=\"song-container\">\n            {songItems}\n        </div>\n    )\n\n}\n\nexport default Songs;","import {React, useState} from 'react';\n\nfunction Create({songs, setSongs}) {\n\n    const [songForm, setSongForm] = useState({\n        title: \"\",\n        artist: \"\"\n    })\n\n    function updateSong(e) {\n        const target = e.target.name\n        setSongForm({...songForm, [target] : e.target.value})\n    }\n\n    function createSong(e) {\n        e.preventDefault();       \n        fetch('', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(songForm),\n            })\n            .then(resp => resp.json())\n            .then((newSong) => {\n                setSongs([...songs, newSong]);\n            });\n\n            e.target.children[1].value = \"\"\n            e.target.children[3].value = \"\"\n\n    }\n\n    return(\n        <div>\n            <h1>Add song</h1>\n            <form id=\"create_songs\" onSubmit={createSong}>\n                <h5>Title:</h5>\n                <input type=\"text\" name=\"title\" onChange={updateSong}></input>\n                <h5>Artist:</h5>\n                <input type=\"text\" name=\"artist\" onChange={updateSong}></input>\n                <input type=\"submit\" value=\"Create Song\"></input> \n            </form>\n        </div>\n    )\n\n}\n\nexport default Create;","import { Link, useMatch, useResolvedPath} from 'react-router-dom';\nimport {React, useContext} from 'react'\nimport ListenerContext from './ListenerContext';\n\nfunction NavBar() {\n\n    const listener = useContext(ListenerContext)\n\n    return(\n        <nav className=\"nav\">\n            <Link to=\"/\" class=\"site-name\">Song Rater ⭐</Link>\n            {listener ? <p>{`Welcome ${listener.name}!`}</p>: null}\n            <ul>\n                <CustomLink to= \"/songs\">Songs</CustomLink>\n                <CustomLink to= \"/listeners\">Listener Songs</CustomLink>\n                {listener ? <CustomLink to= \"/logout\">Logout</CustomLink> :<CustomLink to= \"/login\">Login or Signup</CustomLink>}\n            </ul>\n        </nav>\n    )\n}\n\n\nfunction CustomLink({to, children, ...props}) {\n\n    const resolvedPath = useResolvedPath(to)\n    const isActive = useMatch({path: resolvedPath.pathname, end:true})\n\n    return (\n        <li className={isActive ? \"active\": \"\"}>\n            <Link to={to} {...props}>{children}</Link>\n        </li>\n    )\n}\n\nexport default NavBar;\n","\nfunction Home() {\n\n    return (\n        <div className=\"home\">\n            <h3>Song Rater About :</h3>\n            <p>Song rater is an application that can be used to rate and comment on some of your favorite songs. Leave ratings and see other listeners ratings, as well as songs average listener rating! </p>\n            <h4> Getting started : </h4>\n            <ul>\n                <li>Login or Sign up in the top right corner</li>\n                <li>Once logged in you can browse songs you've rated on the Listener Songs tab</li>\n                <li>Browse all songs and their ratings on the Songs tab, new Songs are added externally</li>\n                <li>Under each song listeners can create, delete, or edit Ratings</li>\n                <li>Listeners can only edit or delete their own ratings, and each listener can only rate a song once</li>\n                <li>When done browsing, go to the logout tab and click Logout</li>\n                <li>To return to the home page click the Song Rater icon on the top left</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Home;","\nimport './App.css';\nimport {React, useState, useEffect} from 'react';\nimport {Routes, Route } from \"react-router-dom\";\nimport Login from './Login';\nimport Logout from './Logout';\nimport ListenerSongs from './ListenerSongs';\nimport Songs from './Songs';\nimport Create from './Create';\nimport ListenerContext from './ListenerContext';\nimport NavBar from './NavBar';\nimport Home from './Home';\nimport \"./styles.css\"\n\nfunction App() {\n\n  const [listener, setListener] = useState(null)\n  const [songs, setSongs] = useState([])\n\n  useEffect(() => {\n    fetch(\"/songs\")\n    .then(resp => resp.json())\n    .then(data => {\n      setSongs(data)\n    })\n  },[])\n \n  useEffect(() => {\n    fetch(\"/me\")\n    .then(resp => {\n      if (resp.ok) {\n        resp.json()\n        .then((listenerLog) => {\n            setListener(listenerLog)\n        }) \n      }\n      else {\n        throw new Error(`HTTP error, status = ${resp.status}`);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    })\n  },[])\n \n  return (\n    <div className='App'>\n      <ListenerContext.Provider value={listener}>\n        <NavBar/>\n        <div className='container'>\n          <Routes>\n              <Route path=\"/\" element={<Home/>}/>\n              <Route path=\"/songs\" element={<Songs songs={songs} setSongs={setSongs}></Songs>}/>\n              <Route path=\"/listeners\" element={<ListenerSongs songs={songs}></ListenerSongs>}/>\n              <Route path=\"/login\" element={<Login setListener={setListener}></Login>}/>\n              <Route path=\"/logout\" element={<Logout setListener={setListener}></Logout>}/>\n              <Route path=\"/songs/new\" element={<Create songs={songs} setSongs={setSongs}></Create>}/>\n          </Routes>\n        </div>\n      </ListenerContext.Provider> \n\n      \n    </div>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}